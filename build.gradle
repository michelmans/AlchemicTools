plugins {
    id 'java'
	id 'eclipse'
}

group = 'me.alchemi'
version = '1.1.9'
description = 'AlchemicTools'
sourceCompatibility = '1.8'

configurations {
	shade
	compile.extendsFrom shade
}

repositories {
	mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        url = 'http://repo.dmulloy2.net/content/groups/public/'
    }

    maven {
        url = 'http://repo.mvdw-software.be/content/groups/public/'
    }

    maven {
        url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven {
        url = 'https://maven.enginehub.org/repo/'
    }

    maven {
        url = 'http://repo.songoda.com/artifactory/private/'
    }

    maven {
        url = 'http://ci.athion.net/job/PlotSquared-Breaking/ws/mvn/'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'com.comphenix.protocol:ProtocolLib-API:4.4.0'
    shade 'commons-io:commons-io:2.6'
    shade 'org.apache.commons:commons-lang3:3.9'
    shade 'com.taskadapter:trello-java-wrapper:0.13'
    shade 'org.asynchttpclient:async-http-client:2.10.4'
    shade "com.discord4j:discord4j-core:3.0.10"
    compile 'org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT'
    compile project(':AlchemicLibrary')
    compile project(':AlchemicLibrary-api')
    compile 'me.clip:placeholderapi:2.10.4'
    compile 'com.sk89q.worldguard:worldguard-core:7.0.0-SNAPSHOT'
    compile 'com.sk89q.worldguard:worldguard-legacy:7.0.0-SNAPSHOT'
    compile ('be.maximvdw:MVdWPlaceholderAPI:3.0.1-SNAPSHOT') {
		exclude group: 'org.spigotmc', module: 'spigot' 
	}
    compile ('com.github.intellectualsites.plotsquared:PlotSquared-API:4.340') {
		exclude group: 'com.github.Sauilitired', module: 'Jenkins4J'
	}
    implementation  files('ChatControlProAPI_8.0.11.jar')
}

task copy(type: Copy) {
	dependsOn 'jar'
	
	group = "Build"
	description = "Install project to Test-Server."
	
	println "Installing jar file from ${jar.archivePath}"
	
	from jar.archivePath
	into '../Test-Server/plugins/'
	rename '(.*)-(.*).jar', '$1.jar'
}

processResources {
	filter  { line -> line.replaceAll('\\$\\{project.version\\}', project.version)}
}

jar {
	
	println "Building jar file..."
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

eclipse {

	autoBuildTasks copy
	
}
